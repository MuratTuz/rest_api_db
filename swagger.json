{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Movie Rest API with Swagger",
    "description": "Documentation generated by the <b><i>swagger-autogen</i></b> module"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Movie",
      "description": "Movies information"
    },
    {
      "name": "Rent",
      "description": "Information of rented movies"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application.json"
  ],
  "produces": [
    "application.json"
  ],
  "paths": {
    "/movies/": {
      "get": {
        "tags": [
          "Movie"
        ],
        "description": "GET all movies",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Movies"
            },
            "description": "All movies"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Movie"
        ],
        "description": "Create new movie",
        "parameters": [
          {
            "name": "newMovie",
            "in": "body",
            "description": "New movie data",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New created movie",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "tags": [
          "Movie"
        ],
        "description": "GET movie by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Movie id existed in the database"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Movie"
            },
            "description": "Movie requested by id"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Movie"
        ],
        "description": "Update a movie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Movie id existed in the database"
          },
          {
            "name": "newMovie",
            "in": "body",
            "description": "New data for updating an existed movie",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Updated movie",
            "schema": {
              "$ref": "#/definitions/Movie"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Movie"
        ],
        "description": "DELETE a movie by id ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Movie id existed in the database"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/rents/": {
      "get": {
        "tags": [
          "Rent"
        ],
        "description": "GET all rents",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [
          "Rent"
        ],
        "description": "POST a rent",
        "parameters": [],
        "responses": {}
      }
    },
    "/rents/{id}": {
      "delete": {
        "tags": [
          "Rent"
        ],
        "description": "DELETE a rent by id ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Id of the movie which is already rented"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Movie": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 10002
        },
        "name": {
          "type": "string",
          "example": "lord of the rings"
        },
        "year": {
          "type": "string",
          "example": "1999"
        },
        "genre": {
          "type": "string",
          "example": "adventure"
        },
        "income": {
          "type": "number",
          "example": 5498700
        }
      }
    },
    "Movies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Movie"
      }
    },
    "Rent": {
      "type": "object",
      "properties": {
        "movieId": {
          "type": "number",
          "example": 10002
        },
        "duration": {
          "type": "number",
          "example": 10
        },
        "person": {
          "type": "string",
          "example": "Hi Coders"
        }
      }
    },
    "Rents": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Rent"
      }
    }
  }
}